    <head>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">
        var loadTimeInTicks = (new Date().getTime() * 10000) + 621355968000000000;
        tokenOwnershipQR = null;

        var body = document.body,
            html = document.documentElement;

        docHeight = Math.max( body.scrollHeight, body.offsetHeight, 
            html.clientHeight, html.scrollHeight, html.offsetHeight);
        docWidth = Math.max( body.scrollWidth, body.offsetWidth, 
            html.clientWidth, html.scrollWidth, html.offsetWidth);

        var deviceId = "";

        function onLoad() {
            // Get device id from QS param
            var urlParams = new URLSearchParams(window.location.search);
            deviceId = urlParams.get("deviceId");
            app.deviceId = deviceId;
        }

        function tryGetContent() {

            $.get("Device/DisplayContent?deviceId=" + deviceId, function (content) {
                if (content != null) {
                    // Ignore if already displaying token
                    if (app.display.tokenImageUrl == content.currentDisplay.tokenImageUrl &&
                        app.display.borderWidthPercent == content.currentDisplay.borderWidthPercent &&
                        app.display.fitScreen == content.currentDisplay.fitScreen &&
                        app.display.backgroundColor == content.currentDisplay.backgroundColor &&
                        app.display.orientationVertical == content.currentDisplay.orientationVertical &&
                        app.display.tokenMetadata == content.currentDisplay.tokenMetadata &&
                        app.display.tokenOwnershipUrl == content.currentDisplay.tokenOwnershipUrl) {
                        return;
                    }

                    app.hideToken = false;
                    app.display = content.currentDisplay;
                    if (content.currentDisplay.backgroundColor == null) {
                        app.tokenBackgroundColor = "#ffffff"
                    }
                    else {
                        app.tokenBackgroundColor = content.currentDisplay.backgroundColor;
                    }
                    var metadataHeight = 150;
                    var borderWidthInPx = docHeight * (content.currentDisplay.borderWidthPercent * .01);
                    app.borderWidthInPx = borderWidthInPx + "px";
                    var borderHeight = borderWidthInPx * 2;
                    app.tokenHeight = (docHeight - borderHeight) + "px";
                    app.tokenWidth = docWidth + "px";
                }
                else {
                    app.hideToken = true;
                }
            });
        }

        function getLastSyncTime() {
            
            $.get("Device/LastUpdateTime?deviceId=" + deviceId, function (content) {
                if (content > loadTimeInTicks) {
                    location.reload();
                }
            });
        }

        window.setInterval(tryGetContent, 10000);
        window.setInterval(getLastSyncTime, 3600000);
    </script>
</head>
    <body onload="onLoad()" style="overflow:hidden">
        <style>
            .center {
                display: block;
                margin-left: auto;
                margin-right: auto;
            }

            #tokenContainer {
                background-position: center;
                background-repeat: no-repeat;
                color: #FFFFFF;
            }

            #metadataContainer {
                position: absolute;
                bottom: 0px;
                background: #ffffffa0;
                display: flex;
                padding: 1em;
                min-height: 5em;
            }

            #deviceRegistrationContainer {
                text-align: center;
            }

            .fullScreen {
                position: fixed;
                right: 0;
                bottom: 0;
                height: 100%;
            }

            #miniDeviceId {
                position: absolute;
                bottom: 0;
                right: .5em;
                font-size: .6em;
            }

            #header {
                position: absolute;
                padding-top: 2%;
                padding-left: 4em;
                padding-bottom: 1%;
                width: 100%;
                background-color: darkcyan;
                color: white;
                z-index: 1;
            }
        </style>

        <div id="app"
             style="position: relative;
                color: black;"
             v-bind:style="{
                backgroundColor: hideToken? '' : tokenBackgroundColor,
                padding: borderWidthInPx,
                height:docHeight
             }">


            <span id="header" v-if="hideToken">
                <h1>TokenCast</h1>
            </span>

            <div v-if="!hideToken" style="text-align:center">

                <div id="tokenContainer"
                     class="center"
                     v-bind:style="{
                         backgroundImage: isVideo? '' : 'url(' + display.tokenImageUrl + ')',
                         backgroundColor: tokenBackgroundColor,
                         height: display.orientationVertical? tokenWidth : tokenHeight,
                         width: display.orientationVertical? tokenHeight : 'auto',
                         backgroundSize: display.fitScreen? 'cover' : 'contain',
                         transform: display.orientationVertical? 'rotate(90deg)' : 'none',
                         transformOrigin: display.orientationVertical?  'top left' : 'initial',
                         position: 'relative',
                         left: display.orientationVertical? '79.65%' : '0px'
                 }">
                    <video v-if="isVideo" style="height:100%; width:auto;" muted loop autoplay>
                        <source :src="display.tokenImageUrl" type="video/mp4" />
                    </video>
                </div>
                <div id="metadataContainer" v-if="showMetadata"
                     v-bind:style="{
                            writingMode: display.orientationVertical? 'vertical-rl' : 'unset',
                            left: display.orientationVertical? '5%' : '50%',
                            transform: display.orientationVertical? 'translateY(-50%)' : 'translate(-50%, -10%)',
                            position: 'absolute',
                            top: display.orientationVertical? '50%' : ''
                         }">
                    <div v-if="display.tokenMetadata != null && display.tokenMetadata != ''"
                         v-bind:style="{
                            width: display.orientationVertical? '' : 'max-content',
                            height: display.orientationVertical? 'fit-content' : ''
                         }"
                         style="max-height: 45em;
                                max-width: 45em;
                                margin: auto;
                                padding: 1em;">
                        {{ display.tokenMetadata }}
                    </div>
                    <div v-if="showOwnershipQRCode"
                         id="tokenOwnershipQR"
                         v-bind:style="{ backgroundImage:tokenOwnershipQRCode,
                                         marginTop: display.orientationVertical? 'auto': '',
                                         marginBottom: display.orientationVertical? 'auto': '',
                                         width: display.orientationVertical? '100px': '70px',
                                         height: display.orientationVertical? '100px': '70px'}"
                         style="background-position: center;
                                background-size: contain;
                                background-repeat: no-repeat;"></div>
                </div>
                <div id="miniDeviceId">{{ deviceId }}</div>
            </div>

            <div id="deviceRegistrationContainer" v-if="hideToken" style="width:100%; height:100%;">
                <h2 style="padding-top:10%;">Scan the QR code to get started</h2>
                <img class="center" style="height:50%; max-height: 30em;"
                     v-bind:src="deviceQRCode" />
                <br />
                <h4>Or head to <a v-bind:href="accountUrl">https://tokencast.net/account</a> and enter the following device identifier:</h4>
                <h4 id="deviceIdText">{{ deviceId }}</h4>
            </div>
        </div>
        <script type="text/javascript">
            var app = new Vue({
                 el: '#app',
                data: {
                    deviceId: '',
                    display: '',
                    tokenBackgroundColor: '',
                    borderWidthInPx: '',
                    hideToken: true,
                    tokenHeight: '',
                    tokenWidth: '',
                    docHeight: docHeight + "px"
                },
                computed: {
                    accountUrl: function () {
                        return "https://tokencast.net/account?deviceId=" + this.deviceId;
                    },
                    deviceQRCode: function () {
                        var encodedAccountUrl = encodeURI(this.accountUrl);
                        return "device/GetQRCode?url=" + encodedAccountUrl;
                    },
                    tokenOwnershipQRCode: function () {
                        var encodedOwnershipUrl = encodeURI(this.display.tokenOwnershipUrl);
                        return "url('device/GetQRCode?url=" + encodedOwnershipUrl + "')";
                    },
                    showOwnershipQRCode: function () {
                        return this.display.tokenOwnershipUrl != null && this.display.tokenOwnershipUrl != "";
                    },
                    showMetadata: function () {
                        return this.showOwnershipQRCode || (this.display.tokenMetadata != null && this.display.tokenMetadata != "");
                    },
                    isVideo: function () {
                        return this.display.tokenImageUrl && this.display.tokenImageUrl.includes("mp4");
                    }
                }
            });
        </script>
    </body>
